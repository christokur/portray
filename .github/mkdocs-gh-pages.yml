name: Deploy mkdocs to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
    - main
    - master
    - develop
#  pull_request:
#    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  pages: write      # to deploy to Pages

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  docs-build:
    strategy:
      matrix:
        # Put the version we consider mainline and publish with
        python-version: [ "3.11" ]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCOUNT_TOOLS: "433714148419"
      AWS_PROFILE_TOOLS: "cloud-services-prod"
      AWS_REGION_TOOLS: "us-east-2"
      AWS_ROLE_NAME: "github-codeartifact-readwrite"
      PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
      PYTHONPATH: src/
    outputs:
      site: ${{ steps.build.outputs.site }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install terraform-docs
        uses: jaxxstorm/action-install-gh-release@v1.12.0
        with: # Grab a specific tag
          repo: terraform-docs/terraform-docs
          tag: v0.19.0

      - uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}
          #cache: poetry

      - name: Install poetry
        run: |
          echo python-path:'${{ steps.setup_python.outputs.python-path }}'
          ${{ steps.setup_python.outputs.python-path }} --version
          ${{ steps.setup_python.outputs.python-path }} -m pip install poetry==1.8.5

      - name: configure-aws-credentials
        uses: SandsB2B/configure-aws-credentials-action@main
        with:
          role_name: "${{ env.AWS_ROLE_NAME }}"
          account_id: "${{ env.AWS_ACCOUNT_TOOLS }}"
          aws_region: "${{ env.AWS_REGION_TOOLS }}"
          aws_profile: "${{ env.AWS_PROFILE_TOOLS }}"

      - name: Check AWS profiles
        continue-on-error: false
        run: |
          set  +e
          aws configure list-profiles
          aws sts get-caller-identity --profile=$AWS_PROFILE_TOOLS

          set | egrep -e '^(AWS_|CI_)'
        shell: bash

      - name: Set up access to CodeArtifact
        run: |
          [ type aws_setup_codeartifact_access 2>/dev/null ] || . $GITHUB_WORKSPACE/cicd/rc/configure_aws_codeartifact.rc
          aws_setup_codeartifact_access
        shell: bash

      - name: Install dependencies
        run: |
          #poetry env use ${{ matrix.python-version }}
          poetry lock --check
          poetry install --with main,dev,docs --no-ansi --no-interaction || {
            poetry install --with main,dev,docs --no-ansi --no-interaction;
          }
        shell: bash

      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enablement: true  # This line enables Pages if not already enabled

      - name: Build docs
        id: build
        run: |
          poetry run poe docs-build
          [ -z "site" ] || chmod -c -R +rX "./site" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
          echo "site<<STDOUT" >>$GITHUB_OUTPUT
          ls site | sort | egrep -v -e '[. ]$' >>$GITHUB_OUTPUT
          echo "STDOUT" >>$GITHUB_OUTPUT
        shell: bash

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        if: steps.build.outputs.site
        with:
          name: github-pages
          path: ./site

  # Deployment job
  docs-publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        if: needs.docs-build.outputs.site
        uses: actions/deploy-pages@v4.0.5 # or the latest "vX.X.X" version tag for this action
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
